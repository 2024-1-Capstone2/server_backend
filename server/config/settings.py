"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import os
from django.utils.translation import gettext_lazy as _

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MODEL_PATH_ASL = os.path.join(BASE_DIR, 'handML/model', 'model_asl.keras')
MODEL_PATH_ASL_HEADCNT = os.path.join(BASE_DIR, 'handML/model', 'model_asl_headcnt.keras')
MODEL_PATH_ASL_NUM = os.path.join(BASE_DIR, 'handML/model', 'model_asl_num.keras')
MODEL_PATH_ASL_YESORNO = os.path.join(BASE_DIR, 'handML/model', 'model_asl_yesorno.keras')
MODEL_PATH_CSL = os.path.join(BASE_DIR, 'handML/model', 'model_csl.keras')
MODEL_PATH_CSL_HEADCNT = os.path.join(BASE_DIR, 'handML/model', 'model_csl_headcnt.keras')
MODEL_PATH_CSL_NUM = os.path.join(BASE_DIR, 'handML/model', 'model_csl_num.keras')
MODEL_PATH_CSL_YESORNO = os.path.join(BASE_DIR, 'handML/model', 'model_csl_yesorno.keras')

ASGI_APPLICATION = "config.asgi.application"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-poo4g_-)(nw3vk_i19s=n+bqzcia_ycm@daqfe4%#2#igj#jx#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# CORS 설정
CORS_ORIGIN_ALLOW_ALL=True

ALLOWED_HOSTS = ['*']

# 웹 소켓 레이어 추가
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders', # CORS 추가
    'handML.apps.HandmlConfig',
    'busInfo.apps.BusinfoConfig',
    'refund.apps.RefundConfig',
    'websocket_handler.apps.WebsocketHandlerConfig',
    'multiLanguage.apps.LanguageConfig',
    'ticket.apps.TicketConfig',
    'general.apps.GeneralConfig',
    'video_stream.apps.VideoStreamConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # CORS 관련 추가 (가장 상단에 위치)
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


TEMP = 1

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGES = [
    ('en', _('English')),
    ('ko', _('Korean')),
    ('zh-hans', _('Chinese')),
]

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

# 다국어 처리를 위해 추가
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

FILE_CHARSET = 'utf-8'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 로그
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django.server': {
            'handlers': ['console'],
            'level': 'WARNING',  # Change this line
            'propagate': True,
        },
    },
}

